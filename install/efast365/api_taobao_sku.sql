DROP TABLE IF EXISTS `api_taobao_sku`;
CREATE TABLE `api_taobao_sku` (
  `api_taobao_sku_id` int(11) NOT NULL AUTO_INCREMENT,
  `shop_code` VARCHAR(128) DEFAULT '' COMMENT '店铺代码',
  `properties_name` varchar(255) DEFAULT NULL COMMENT 'sku所对应的销售属性的中文名字串，格式如：pid1:vid1:pid_name1:vid_name1;pid2:vid2:pid_name2:vid_name2……',
  `sku_spec_id` varchar(255) DEFAULT NULL COMMENT '表示SKU上的产品规格信息',
  `with_hold_quantity` varchar(255) DEFAULT NULL COMMENT '商品在付款减库存的状态下，该sku上未付款的订单数量',
  `sku_delivery_time` varchar(255) DEFAULT NULL COMMENT 'sku级别发货时间',
  `change_prop` varchar(255) DEFAULT NULL COMMENT '基础色数据',
  `outer_id` varchar(255) DEFAULT NULL COMMENT '商家设置的外部id。天猫和集市的卖家，需要登录才能获取到自己的商家编码，不能获取到他人的商家编码。',
  `barcode` varchar(255) DEFAULT NULL COMMENT '商品级别的条形码',
  `sku_id` varchar(255) DEFAULT NULL COMMENT 'sku的id',
  `iid` varchar(255) DEFAULT NULL COMMENT 'sku所属商品id(注意：iid近期即将废弃，请用num_iid参数)',
  `num_iid` varchar(255) DEFAULT NULL COMMENT 'sku所属商品数字id',
  `properties` varchar(255) DEFAULT NULL COMMENT 'sku的销售属性组合字符串（颜色，大小，等等，可通过类目API获取某类目下的销售属性）,格式是p1:v1;p2:v2',
  `quantity` varchar(255) DEFAULT NULL COMMENT '属于这个sku的商品的数量',
  `price` varchar(255) DEFAULT NULL COMMENT '属于这个sku的商品的价格 取值范围:0-100000000;精确到2位小数;单位:元。如:200.07，表示:200元7分。',
  `created` varchar(255) DEFAULT NULL COMMENT 'sku创建日期 时间格式：yyyy-MM-dd HH:mm:ss',
  `modified` varchar(255) DEFAULT NULL COMMENT 'sku最后修改日期 时间格式：yyyy-MM-dd HH:mm:ss',
  `status` varchar(255) DEFAULT NULL COMMENT 'sku状态。 normal:正常 ；delete:删除',
  `first_insert_time` datetime DEFAULT NULL COMMENT '平台第一次数据下载时间',
  `last_update_time` datetime DEFAULT NULL COMMENT '平台最后一次更新时间',
  `lastchanged` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '数据变更时间戳',
  `is_relation` tinyint(2) NOT NULL DEFAULT '0' COMMENT 'sku是否绑定',
  `relation_msg` VARCHAR(255) NOT NULL COMMENT '关联备注',
  `spec1_name` varchar(100) DEFAULT '' COMMENT '规格1',
  `spec2_name` varchar(100) DEFAULT '' COMMENT '规格2',
  PRIMARY KEY (`api_taobao_sku_id`),
  UNIQUE KEY `sku_id` (`sku_id`) USING BTREE,
  KEY `num_iid` (`num_iid`) USING BTREE,
  KEY `outer_id` (`shop_code`,`outer_id`) USING BTREE,
  KEY `is_relation` (`is_relation`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='淘宝商品SKU原始数据表';